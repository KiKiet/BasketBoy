{"version":3,"sources":["file:///C:/Users/king/Documents/Bootcamp-AthenaStudio-TranGiaKiet/basket-boy/assets/scripts/gameManager.ts"],"names":["_decorator","Component","Prefab","instantiate","v3","Label","Vec2","SystemEventType","systemEvent","CCFloat","TextAsset","Ball","player","Trajectory","ccclass","property","GameManager","start","onLoad","spawnBoard","spawnBall","on","TOUCH_START","onTouchDown","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","obj","JSON","parse","data","text","board","boardPre","node","addChild","setPosition","getBoardRandomPos","getChildByName","ball","ballPre","xRandom","yRandom","Math","floor","random","maxX","minX","maxY","minY","gainScore","score","scoreUI","string","toString","update","deltaTime","event","touchCheck","thisNode","active","rb","sleep","anim","stop","playerAnim","changeSpriteFrame","startPoint","getUILocation","trajectory","showOrHide","endPoint","force","getThrowPower","updateDots","ballPos","play","scheduleOnce","awakeRbAndShoot","shootPower","startPosition","endPosition","distance","direction","subtract","normalize","multiplyScalar"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Prefab, instantiate, v3, Label, Vec2, SystemEventType, systemEvent, Touch, CCFloat, Camera, Vec3, TextAsset } from 'cc';\r\nimport { Ball } from './ball';\r\nimport { Basket } from './basket';\r\nimport { player } from './player';\r\nimport { Trajectory } from './trajectory';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = GameManager\r\n * DateTime = Thu Feb 17 2022 14:24:32 GMT+0700 (Indochina Time)\r\n * Author = kingkiet25\r\n * FileBasename = gameManager.ts\r\n * FileBasenameNoExtension = gameManager\r\n * URL = db://assets/scripts/gameManager.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n */\r\n \r\n@ccclass('GameManager')\r\nexport class GameManager extends Component {\r\n    @property(Prefab)\r\n    private boardPre: Prefab;\r\n    @property(Prefab)\r\n    private ballPre: Prefab;\r\n    @property(Label)\r\n    private scoreUI: Label = null;\r\n    @property\r\n    private maxX: number = 400;\r\n    @property\r\n    private maxY: number = 150;\r\n    @property\r\n    private minX: number = -55;\r\n    @property\r\n    private minY: number = 60;\r\n    @property(Trajectory)\r\n    private trajectory: Trajectory;\r\n    @property(player)\r\n    private player: player;\r\n    private startPoint: Vec2;\r\n    private endPoint: Vec2;\r\n    force: Vec2;\r\n    direction: Vec2;\r\n    @property(CCFloat)\r\n    shootPower:number = 100;\r\n    @property(TextAsset)\r\n    private data: TextAsset = null;\r\n    private touchCheck:boolean = true;\r\n\r\n    start () {\r\n        \r\n    }\r\n    onLoad(){\r\n        this.spawnBoard();\r\n        this.spawnBall();\r\n        systemEvent.on(SystemEventType.TOUCH_START, this.onTouchDown, this);\r\n        systemEvent.on(SystemEventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        systemEvent.on(SystemEventType.TOUCH_END, this.onTouchEnd, this);\r\n        let obj = JSON.parse(this.data.text);\r\n    }\r\n\r\n    spawnBoard(){\r\n        var board = instantiate(this.boardPre);\r\n        this.node.addChild(board);\r\n        board.setPosition(this.getBoardRandomPos());\r\n        board.getChildByName(\"Basket\").setPosition(0,-70);\r\n    }\r\n    spawnBall(){\r\n        var ball = instantiate(this.ballPre);\r\n        this.node.addChild(ball);\r\n        ball.setPosition(-147,-411,0);\r\n    }\r\n    getBoardRandomPos(){\r\n        var xRandom = 0;\r\n        var yRandom = 0;\r\n        xRandom = Math.floor(Math.random() * (this.maxX - this.minX + this.maxX)) + this.minX;\r\n        yRandom = Math.floor(Math.random() * (this.maxY - this.minY + this.maxY)) + this.minY;\r\n        return v3(xRandom,yRandom,0);\r\n    }\r\n\r\n    gainScore(score:number){\r\n        this.scoreUI.string = \"SCORE: \" + score.toString();\r\n        //if(highScore > 0) this.scoreUi.string = \"SCORE: \" + score.toString() + \"\\nHIGH SCORE: \" + highScore.toString();\r\n    }\r\n    update (deltaTime: number) {\r\n        \r\n    }\r\n    onTouchDown (event: Touch) {\r\n        if(this.touchCheck){\r\n            Ball.thisNode.active = false;\r\n            Ball.rb.sleep();\r\n            Ball.anim.stop();\r\n            player.playerAnim.stop();\r\n            this.player.changeSpriteFrame();\r\n            Ball.thisNode.setPosition(-200,-280);\r\n            this.startPoint = event.getUILocation();\r\n            this.trajectory.showOrHide(true);\r\n        }\r\n    }\r\n    onTouchMove (event: Touch) {\r\n        if(this.touchCheck){\r\n            this.endPoint = event.getUILocation();\r\n            this.force = this.getThrowPower(this.startPoint,this.endPoint);\r\n            this.trajectory.updateDots(Ball.ballPos,this.force);\r\n        }\r\n    }\r\n    onTouchEnd (event: Touch) {\r\n        if(this.touchCheck){\r\n            player.playerAnim.play('throw');\r\n            this.scheduleOnce(function(){\r\n                Ball.awakeRbAndShoot(this.force,this.shootPower)\r\n            },0.70);\r\n            this.trajectory.showOrHide(false);\r\n            this.touchCheck = false;\r\n        }\r\n    }\r\n    getThrowPower(startPosition:Vec2,endPosition:Vec2){\r\n        let distance = Vec2.distance(startPosition,endPosition);\r\n        this.direction = (endPosition.subtract(startPosition)).normalize();\r\n        return this.direction.multiplyScalar(distance);\r\n    }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}